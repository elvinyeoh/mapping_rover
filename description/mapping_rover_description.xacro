<?xml version="1.0" ?>
<robot name="mapping_rover" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <xacro:property name="base_width" value="0.25"/>
  <xacro:property name="base_length" value="0.59"/>
  <xacro:property name="base_height" value="0.145"/>
	
  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.09"/>
  <xacro:property name="wheel_width" value="0.08"/>
  
  <!-- Define the shape of the robot's two caster in meters -->
  <xacro:property name="caster_radius" value="0.07"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->

  <!-- Define the gap between the wheel and chassis along y-axis in meters -->
  <xacro:property name="wheel_ygap" value="0.0380"/>

  <!-- Position the wheels along the z-axis -->
  <xacro:property name="wheel_zoff" value="-0.0425"/>

  <!-- Position the wheels along the x-axis -->
  <xacro:property name="wheel_xoff" value="0"/>

  <!-- Position the front caster wheel along the x-axis -->
  <xacro:property name="front_caster_xoff" value="0.2"/>
  
  <!-- Position the front and back caster wheel along the z-axis -->
  <xacro:property name="caster_zoff" value="-0.0625"/>
  
  <!-- Position the back caster wheel along the x-axis -->
  <xacro:property name="back_caster_xoff" value="-0.2"/>


  <!-- Material colour -->
  <material name="black">
      <color rgba="0 0 0 1"/>
   </material>
  

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="15.8"/>
      <inertia ixx="1.92233333" ixy="0.0" ixz="0.0" iyy="5.08233333" iyz="0.0" izz="6.34633333"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="1"/>
      <inertia ixx="0.145833" ixy = "0" ixz = "0" iyy="0.145833" iyz = "0" izz="0.125"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </xacro:macro>
  
  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 3.141592654"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Red">
        <color rgba="${255/255} ${0/255} ${0/255} 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15.8" w="${base_width}" d="${base_length}" h="${base_height}"/>
    
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->	
  <link name="base_footprint">
  </link>

  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint" />
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </joint>
  

   <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <origin xyz="${-1*wheel_xoff} ${1*(base_width/2+wheel_ygap)} ${wheel_zoff}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>

    <link name="left_wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black">
              <color rgba="0 0 0 1"/>
            </material>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>

    </link>

    <gazebo reference="left_wheel_link">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <material>Gazebo/Black</material>
    </gazebo>


    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <origin xyz="${-1*wheel_xoff} ${-1*(base_width/2+wheel_ygap)} ${wheel_zoff}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>

    <link name="right_wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="black">
              <color rgba="0 0 0 1"/>
            </material>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>

    </link>

    <gazebo reference="right_wheel_link">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <material>Gazebo/Black</material>
    </gazebo>


  <!-- *********************** CASTER WHEEL ******************************  -->
       
  <link name="front_caster_link">
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="1" r="${caster_radius}"/>
  </link>

  <gazebo reference="front_caster_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="front_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster_link"/>
    <origin xyz="${front_caster_xoff} 0.0 ${caster_zoff}" rpy="0 0 0"/>
  </joint>
  
  <link name="back_caster_link">
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="1" r="${caster_radius}"/>
  </link>

  <gazebo reference="back_caster_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <joint name="back_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_caster_link"/>
    <origin xyz="${back_caster_xoff} 0.0 ${caster_zoff}" rpy="0 0 0"/>
  </joint>

</robot>
